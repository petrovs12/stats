### A Pluto.jl notebook ###
# v0.16.0

using Markdown
using InteractiveUtils

# ╔═╡ 9d2617c5-ebf2-46c8-910f-190ba1d160ac
using BenchmarkTools

# ╔═╡ 89196053-24db-4013-a1e3-3d3b22c4eedc
using Combinatorics

# ╔═╡ 27547863-22e1-466e-951e-2a5677bb9501
using IterTools

# ╔═╡ bade5453-0522-4cbc-8200-78ec160f1192
using ConstraintSolver, JuMP

# ╔═╡ 568f057a-126d-11ec-23cb-f98bea4a534f
md"# Project Euler 1

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

"

# ╔═╡ daad198c-10c8-4e4c-93c4-d330ab22f3dd
naive1(x)=sum([i for i in 1:(x-1) if i%3==0 || i%5==0])

# ╔═╡ 2cca4797-d1ee-4c27-8243-736e3e468dd1
naive1(1000)

# ╔═╡ 6b82e993-2f3d-4d5c-8709-57050c7211de
sumRange(i,j) = (j-i+1)*(i+j)/2

# ╔═╡ 382a2b3a-4059-4cbe-8485-b0ecce99c451
sumRange(1,10)

# ╔═╡ e59e2718-acc6-4a98-8ec9-61cf0a375f90
md"We can also solve it with the inclusion-exclusion principle"

# ╔═╡ f7acd079-f79b-4967-a9ee-fc4965e2a06c
inclusionExclusionPrincipleProb1(n) = begin 
	k=n-1
	sumRange(1,floor(k/3))*3+sumRange(1,floor(k/5))*5-sumRange(1,floor(k/15))*15
end

# ╔═╡ c118a05d-d1bb-4767-9f3a-0b5cefd69d47
inclusionExclusionPrincipleProb1(1000)

# ╔═╡ 078cb436-e238-4a69-bde6-156624db601b
@benchmark sum(1:1000000)

# ╔═╡ cea0b9f0-b908-4c33-8a5d-6a3019cfa47a
@benchmark sumRange(1,1000000)

# ╔═╡ 07d10397-f053-45e0-ab2b-6565c18db5a2
@benchmark inclusionExclusionPrincipleProb1(10000)

# ╔═╡ 464e87db-a12f-4e8b-a03a-ae1f943a42d0
@benchmark naive1(10000)

# ╔═╡ e323b98a-47a7-4182-9892-4d0b1891e295
md" so we can see we have about $(6.380*10^(-6)/(0.021*10^(-9))) speed-up"

# ╔═╡ 82baf161-7a98-4bb5-a928-b2273e4360cb
md"We can also do it for a general problem with the inclusion- exclusion principle as follows:
"

# ╔═╡ c7667675-8018-40f5-a1d9-8756f29466e0
prod([1,2,3])

# ╔═╡ ed4ded6b-925a-46e7-bcab-0cf0dc0fe80a
inclusionExclusionSumUpTo(n,multiples) = begin
	k=n-1
	res = 0
	for comb in combinations(multiples)
		pcomb=prod(comb)
		res += (-1)^(length(comb)-1)* sumRange(1,floor(k/pcomb))*pcomb
	end
	res
end

# ╔═╡ fa4d516c-74ea-44cb-bc18-e2b6cde80515
inclusionExclusionSumUpTo(1000,[3,5])

# ╔═╡ 120de079-e8e5-40b3-9582-c3741cf024cb
@benchmark inclusionExclusionSumUpTo(100000,[3,5,7,11,13])

# ╔═╡ 6ea414f8-d5bb-4432-9afb-6d2b2cfd1d01
md"We can see it's pretty fast..."

# ╔═╡ 6d793a48-b48e-4547-ac87-c23a1b03de9c
md" # Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

"

# ╔═╡ e0470dad-e1ab-4603-85d0-e165f80c2463
md"Copy some fibonacci channel code from [this blog post about lazy sequences](https://www.oxinabox.net/2017/11/18/Lazy-Sequences-in-Julia.html)"

# ╔═╡ c6a079d7-2773-41ba-81c8-773efaabd010
function fib_ch(buff=1)
    prev=0
    cur=1
    Channel(ctype=Int, csize=buff) do c
        while(true)
            put!(c, cur)
            prev, cur = (cur, prev+cur) # nice little avoiding a temp here
        end
    end
end

# ╔═╡ 61d320a0-2f4f-4cf4-b800-20bb77560c17


# ╔═╡ 2eb91ffc-799d-496e-8b50-6be2d497beaa
sum([x for x in collect(IterTools.takewhile(x->x<=4_000_000,fib_ch(100))) if x%2==0])

# ╔═╡ 5e201d20-3600-4b21-a764-8dd1e89cdf66
md" It's also quite fast!"

# ╔═╡ 6678078e-f30c-4e5e-8de5-f697d6c241fd
eulerProblem2WithLazySeq(limit)=sum([x for x in collect(IterTools.takewhile(x->x<=limit,fib_ch(100))) if x%2==0])

# ╔═╡ c2c72029-ffd2-463c-8548-bbe306178bd1
eulerProblem2WithLazySeq(4_000_000)

# ╔═╡ 77f86b91-0ac4-4ba4-a687-0ea49a0ddd10
@benchmark eulerProblem2WithLazySeq(4_000_000)

# ╔═╡ 314415de-ac90-479a-8665-fa9e51323740
@benchmark eulerProblem2WithLazySeq(1_000_000_000_000)

# ╔═╡ cea3d8d2-70e4-49c7-9698-d4085976e924
md"Let's figure out also how to solve some recurrent equations and do it like that

$a_n=a_{n-1}+a_{n-2}$

The characteristic equation of the generating function is

$x^2-x-1==0$, with roots

$x_1 = (1+√5)/2, x_2=(1-√5)/2$

Then we can search for a solution of the form $dx_1^n+ex_2^n$,
since then
$a_n-a_{n-1}-a_{n-2} = (dx_1^n+ex_2^n)-(dx_1^{n-1}+ex_2^{n-1})-(...) = dx_1^{n-2}(...=0)-ex_2^{n-2}(...=0)$
and setting $a_0 = 0, a_1=1$ and solving for 
$d,e$ we get eventually Binet's formula:

$ϕ = (\sqrt(5)+1)/2$
$a_n = (ϕ^n-((-ϕ)^{-n}))/√5$

"

# ╔═╡ fba39823-d264-4210-80c8-491eb19486d2
md"# Product 3

The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?


"

# ╔═╡ d6a95c3b-30c1-4004-884c-2acdf4a2ef7f
# let's implement erathostens' sieve
function get_primes(n::Int64)
	numbers = fill(true,n)
	numbers[1] = false
	
	for i = 2:isqrt(n)
		if numbers[i]
			for j = i:div(n,i)
				numbers[i*j] = false
			end
		end
	end
	primes = findall(numbers)
	return primes
end

# ╔═╡ 080bd517-473a-4c13-9969-a4775a2acc16


# ╔═╡ 4746f780-750d-4151-bdfb-9687456a36f5
function findFactors(n::Int64)
 all_primes = get_primes(isqrt(600851475143))
 res = []
 for prime in all_primes
		if mod(n,prime)==0
			push!(res,prime)
			while mod(n,prime)==0
				n= (n//prime)
			end
		end
	end
	res
end

# ╔═╡ f2279703-313c-4146-8e01-52c5fecf8cfd
findFactors(600851475143)

# ╔═╡ 69853164-2ca0-4cba-9aef-307f0766b273
md" 
# Problem 4

 The largest palindrome made fromt he product of 2 2-digit numbers is 9009=91*99.
What's the largest palindorme made forom the product of two 3-digit numbers... 


"

# ╔═╡ 3c93ec46-633e-4d97-aa53-6d16b7e85502
CS = ConstraintSolver

# ╔═╡ 1c57967f-f38f-41e2-bc7c-51d1dd681e0b
function CSPalindrome()
	mod = Model(CS.Optimizer)
	@variable(mod,0<=a[i=1:3]<=9,Int)
	@variable(mod,0<=b[i=1:3]<=9,Int)
	@variable(mod,0<=res[i=1:6]<=9,Int)
	@variable(mod,0<=carry[i=1:5]<=9,Int)
	@constraint(mod,three_digits_1,a[1]>=1)
	@constraint(mod,three_digits_2,b[1]>=1)
	@constraint(mod,first_digit,res[1]==b[1]*a[1])
	@objective(mod,Max,1_000_00*res[1]+10_000*res[2]+1000*res[3]+100*res[4]+10*res[5]+res[6])
	mod
	
end

# ╔═╡ b5da5b91-de7c-4b69-98f5-737a8a9ced34
begin
	md = CSPalindrome()
	optimize!(md)
end

# ╔═╡ e0d8e8d1-8e92-4ea3-9b38-bfb7378fe004
objective_value(md)

# ╔═╡ f6b8b94d-0176-4b19-9c81-2959cfff60e7
isPalindrome(k,l)= begin
 str1= string(k*l)
  str1==reverse(str1)
end

# ╔═╡ cc6dbc26-db1f-4534-95b9-7a801139e1d0
findPalindrome()=

	for i = 999:-1:100
	for j in i:-1:100
		if isPalindrome(i,j)
			return i,j
	end

	end
	end

# ╔═╡ c5d9bd7f-1a75-482f-a2aa-f653fdce083c
findPalindrome()

# ╔═╡ 00000000-0000-0000-0000-000000000001
PLUTO_PROJECT_TOML_CONTENTS = """
[deps]
BenchmarkTools = "6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf"
Combinatorics = "861a8166-3701-5b0c-9a16-15d98fcdc6aa"
ConstraintSolver = "e0e52ebd-5523-408d-9ca3-7641f1cd1405"
IterTools = "c8e1da08-722c-5040-9ed9-7db0dc04731e"
JuMP = "4076af6c-e467-56ae-b986-b466b2749572"

[compat]
BenchmarkTools = "~1.1.4"
Combinatorics = "~1.0.2"
ConstraintSolver = "~0.7.0"
IterTools = "~1.3.0"
JuMP = "~0.21.10"
"""

# ╔═╡ 00000000-0000-0000-0000-000000000002
PLUTO_MANIFEST_TOML_CONTENTS = """
# This file is machine-generated - editing it directly is not advised

julia_version = "1.7.0-beta3.0"
manifest_format = "2.0"

[[deps.ArgTools]]
uuid = "0dad84c5-d112-42e6-8d28-ef12dabb789f"

[[deps.ArnoldiMethod]]
deps = ["LinearAlgebra", "Random", "StaticArrays"]
git-tree-sha1 = "f87e559f87a45bece9c9ed97458d3afe98b1ebb9"
uuid = "ec485272-7323-5ecc-a04f-4719b315124d"
version = "0.1.0"

[[deps.Arpack]]
deps = ["Arpack_jll", "Libdl", "LinearAlgebra"]
git-tree-sha1 = "2ff92b71ba1747c5fdd541f8fc87736d82f40ec9"
uuid = "7d9fca2a-8960-54d3-9f78-7d1dccf2cb97"
version = "0.4.0"

[[deps.Arpack_jll]]
deps = ["Libdl", "OpenBLAS_jll", "Pkg"]
git-tree-sha1 = "e214a9b9bd1b4e1b4f15b22c0994862b66af7ff7"
uuid = "68821587-b530-5797-8361-c406ea357684"
version = "3.5.0+3"

[[deps.Artifacts]]
uuid = "56f22d72-fd6d-98f1-02f0-08ddc0907c33"

[[deps.Base64]]
uuid = "2a0f44e3-6c83-55bd-87e4-b1978d98bd5f"

[[deps.BenchmarkTools]]
deps = ["JSON", "Logging", "Printf", "Statistics", "UUIDs"]
git-tree-sha1 = "42ac5e523869a84eac9669eaceed9e4aa0e1587b"
uuid = "6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf"
version = "1.1.4"

[[deps.Bzip2_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "19a35467a82e236ff51bc17a3a44b69ef35185a2"
uuid = "6e34b625-4abd-537c-b88f-471c36dfa7a0"
version = "1.0.8+0"

[[deps.Calculus]]
deps = ["LinearAlgebra"]
git-tree-sha1 = "f641eb0a4f00c343bbc32346e1217b86f3ce9dad"
uuid = "49dc2e85-a5d0-5ad3-a950-438e2897f1b9"
version = "0.5.1"

[[deps.ChainRulesCore]]
deps = ["Compat", "LinearAlgebra", "SparseArrays"]
git-tree-sha1 = "30ee06de5ff870b45c78f529a6b093b3323256a3"
uuid = "d360d2e6-b24c-11e9-a2a3-2a2ae2dbcce4"
version = "1.3.1"

[[deps.CodecBzip2]]
deps = ["Bzip2_jll", "Libdl", "TranscodingStreams"]
git-tree-sha1 = "2e62a725210ce3c3c2e1a3080190e7ca491f18d7"
uuid = "523fee87-0ab8-5b00-afb7-3ecf72e48cfd"
version = "0.7.2"

[[deps.CodecZlib]]
deps = ["TranscodingStreams", "Zlib_jll"]
git-tree-sha1 = "ded953804d019afa9a3f98981d99b33e3db7b6da"
uuid = "944b1d66-785c-5afd-91f1-9de20f533193"
version = "0.7.0"

[[deps.Combinatorics]]
git-tree-sha1 = "08c8b6831dc00bfea825826be0bc8336fc369860"
uuid = "861a8166-3701-5b0c-9a16-15d98fcdc6aa"
version = "1.0.2"

[[deps.CommonSubexpressions]]
deps = ["MacroTools", "Test"]
git-tree-sha1 = "7b8a93dba8af7e3b42fecabf646260105ac373f7"
uuid = "bbf7d656-a473-5ed7-a52c-81e309532950"
version = "0.3.0"

[[deps.Compat]]
deps = ["Base64", "Dates", "DelimitedFiles", "Distributed", "InteractiveUtils", "LibGit2", "Libdl", "LinearAlgebra", "Markdown", "Mmap", "Pkg", "Printf", "REPL", "Random", "SHA", "Serialization", "SharedArrays", "Sockets", "SparseArrays", "Statistics", "Test", "UUIDs", "Unicode"]
git-tree-sha1 = "6071cb87be6a444ac75fdbf51b8e7273808ce62f"
uuid = "34da2185-b29b-5c13-b0c7-acf172513d20"
version = "3.35.0"

[[deps.CompilerSupportLibraries_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "e66e0078-7015-5450-92f7-15fbd957f2ae"

[[deps.ConstraintProgrammingExtensions]]
deps = ["LinearAlgebra", "MathOptInterface", "Test"]
git-tree-sha1 = "989acd05e57112a5fd1bc8849ebc398a614aa010"
uuid = "b65d079e-ed98-51d9-b0db-edee61a5c5f8"
version = "0.3.2"

[[deps.ConstraintSolver]]
deps = ["ConstraintProgrammingExtensions", "DataStructures", "Formatting", "JSON", "JuMP", "LightGraphs", "MathOptInterface", "MatrixNetworks", "Random", "Statistics", "StatsBase", "StatsFuns"]
git-tree-sha1 = "47a4c07efa6890e7da286495e22742eb19f3eed9"
uuid = "e0e52ebd-5523-408d-9ca3-7641f1cd1405"
version = "0.7.0"

[[deps.DataAPI]]
git-tree-sha1 = "bec2532f8adb82005476c141ec23e921fc20971b"
uuid = "9a962f9c-6df0-11e9-0e5d-c546b8b5ee8a"
version = "1.8.0"

[[deps.DataStructures]]
deps = ["Compat", "InteractiveUtils", "OrderedCollections"]
git-tree-sha1 = "7d9d316f04214f7efdbb6398d545446e246eff02"
uuid = "864edb3b-99cc-5e75-8d2d-829cb0a9cfe8"
version = "0.18.10"

[[deps.Dates]]
deps = ["Printf"]
uuid = "ade2ca70-3891-5945-98fb-dc099432e06a"

[[deps.DelimitedFiles]]
deps = ["Mmap"]
uuid = "8bb1440f-4735-579b-a4ab-409b98df4dab"

[[deps.DiffResults]]
deps = ["StaticArrays"]
git-tree-sha1 = "c18e98cba888c6c25d1c3b048e4b3380ca956805"
uuid = "163ba53b-c6d8-5494-b064-1a9d43ac40c5"
version = "1.0.3"

[[deps.DiffRules]]
deps = ["NaNMath", "Random", "SpecialFunctions"]
git-tree-sha1 = "3ed8fa7178a10d1cd0f1ca524f249ba6937490c0"
uuid = "b552c78f-8df3-52c6-915a-8e097449b14b"
version = "1.3.0"

[[deps.Distributed]]
deps = ["Random", "Serialization", "Sockets"]
uuid = "8ba89e20-285c-5b6f-9357-94700520ee1b"

[[deps.DocStringExtensions]]
deps = ["LibGit2"]
git-tree-sha1 = "a32185f5428d3986f47c2ab78b1f216d5e6cc96f"
uuid = "ffbed154-4ef7-542d-bbb7-c09d3a79fcae"
version = "0.8.5"

[[deps.Downloads]]
deps = ["ArgTools", "LibCURL", "NetworkOptions"]
uuid = "f43a241f-c20a-4ad4-852c-f6b1247861c6"

[[deps.Formatting]]
deps = ["Printf"]
git-tree-sha1 = "8339d61043228fdd3eb658d86c926cb282ae72a8"
uuid = "59287772-0a20-5a39-b81b-1366585eb4c0"
version = "0.4.2"

[[deps.ForwardDiff]]
deps = ["CommonSubexpressions", "DiffResults", "DiffRules", "LinearAlgebra", "NaNMath", "Printf", "Random", "SpecialFunctions", "StaticArrays"]
git-tree-sha1 = "b5e930ac60b613ef3406da6d4f42c35d8dc51419"
uuid = "f6369f11-7733-5829-9624-2563aa707210"
version = "0.10.19"

[[deps.HTTP]]
deps = ["Base64", "Dates", "IniFile", "Logging", "MbedTLS", "NetworkOptions", "Sockets", "URIs"]
git-tree-sha1 = "60ed5f1643927479f845b0135bb369b031b541fa"
uuid = "cd3eb016-35fb-5094-929b-558a96fad6f3"
version = "0.9.14"

[[deps.Inflate]]
git-tree-sha1 = "f5fc07d4e706b84f72d54eedcc1c13d92fb0871c"
uuid = "d25df0c9-e2be-5dd7-82c8-3ad0b3e990b9"
version = "0.1.2"

[[deps.IniFile]]
deps = ["Test"]
git-tree-sha1 = "098e4d2c533924c921f9f9847274f2ad89e018b8"
uuid = "83e8ac13-25f8-5344-8a64-a9f2b223428f"
version = "0.5.0"

[[deps.InteractiveUtils]]
deps = ["Markdown"]
uuid = "b77e0a4c-d291-57a0-90e8-8db25a27a240"

[[deps.IrrationalConstants]]
git-tree-sha1 = "f76424439413893a832026ca355fe273e93bce94"
uuid = "92d709cd-6900-40b7-9082-c6be49f344b6"
version = "0.1.0"

[[deps.IterTools]]
git-tree-sha1 = "05110a2ab1fc5f932622ffea2a003221f4782c18"
uuid = "c8e1da08-722c-5040-9ed9-7db0dc04731e"
version = "1.3.0"

[[deps.JLLWrappers]]
deps = ["Preferences"]
git-tree-sha1 = "642a199af8b68253517b80bd3bfd17eb4e84df6e"
uuid = "692b3bcd-3c85-4b1f-b108-f13ce0eb3210"
version = "1.3.0"

[[deps.JSON]]
deps = ["Dates", "Mmap", "Parsers", "Unicode"]
git-tree-sha1 = "8076680b162ada2a031f707ac7b4953e30667a37"
uuid = "682c06a0-de6a-54ab-a142-c8b1cf79cde6"
version = "0.21.2"

[[deps.JSONSchema]]
deps = ["HTTP", "JSON", "URIs"]
git-tree-sha1 = "2f49f7f86762a0fbbeef84912265a1ae61c4ef80"
uuid = "7d188eb4-7ad8-530c-ae41-71a32a6d4692"
version = "0.3.4"

[[deps.JuMP]]
deps = ["Calculus", "DataStructures", "ForwardDiff", "JSON", "LinearAlgebra", "MathOptInterface", "MutableArithmetics", "NaNMath", "Printf", "Random", "SparseArrays", "SpecialFunctions", "Statistics"]
git-tree-sha1 = "4358b7cbf2db36596bdbbe3becc6b9d87e4eb8f5"
uuid = "4076af6c-e467-56ae-b986-b466b2749572"
version = "0.21.10"

[[deps.KahanSummation]]
deps = ["Test"]
git-tree-sha1 = "1f01068b28d3ad83d4d1212a0ce8d7ecacb33482"
uuid = "8e2b3108-d4c1-50be-a7a2-16352aec75c3"
version = "0.1.0"

[[deps.LibCURL]]
deps = ["LibCURL_jll", "MozillaCACerts_jll"]
uuid = "b27032c2-a3e7-50c8-80cd-2d36dbcbfd21"

[[deps.LibCURL_jll]]
deps = ["Artifacts", "LibSSH2_jll", "Libdl", "MbedTLS_jll", "Zlib_jll", "nghttp2_jll"]
uuid = "deac9b47-8bc7-5906-a0fe-35ac56dc84c0"

[[deps.LibGit2]]
deps = ["Base64", "NetworkOptions", "Printf", "SHA"]
uuid = "76f85450-5226-5b5a-8eaa-529ad045b433"

[[deps.LibSSH2_jll]]
deps = ["Artifacts", "Libdl", "MbedTLS_jll"]
uuid = "29816b5a-b9ab-546f-933c-edad1886dfa8"

[[deps.Libdl]]
uuid = "8f399da3-3557-5675-b5ff-fb832c97cbdb"

[[deps.LightGraphs]]
deps = ["ArnoldiMethod", "DataStructures", "Distributed", "Inflate", "LinearAlgebra", "Random", "SharedArrays", "SimpleTraits", "SparseArrays", "Statistics"]
git-tree-sha1 = "432428df5f360964040ed60418dd5601ecd240b6"
uuid = "093fc24a-ae57-5d10-9952-331d41423f4d"
version = "1.3.5"

[[deps.LinearAlgebra]]
deps = ["Libdl", "libblastrampoline_jll"]
uuid = "37e2e46d-f89d-539d-b4ee-838fcccc9c8e"

[[deps.LogExpFunctions]]
deps = ["ChainRulesCore", "DocStringExtensions", "IrrationalConstants", "LinearAlgebra"]
git-tree-sha1 = "86197a8ecb06e222d66797b0c2d2f0cc7b69e42b"
uuid = "2ab3a3ac-af41-5b50-aa03-7779005ae688"
version = "0.3.2"

[[deps.Logging]]
uuid = "56ddb016-857b-54e1-b83d-db4d58db5568"

[[deps.MacroTools]]
deps = ["Markdown", "Random"]
git-tree-sha1 = "0fb723cd8c45858c22169b2e42269e53271a6df7"
uuid = "1914dd2f-81c6-5fcd-8719-6d5c9610ff09"
version = "0.5.7"

[[deps.Markdown]]
deps = ["Base64"]
uuid = "d6f4376e-aef5-505a-96c1-9c027394607a"

[[deps.MathOptInterface]]
deps = ["BenchmarkTools", "CodecBzip2", "CodecZlib", "JSON", "JSONSchema", "LinearAlgebra", "MutableArithmetics", "OrderedCollections", "SparseArrays", "Test", "Unicode"]
git-tree-sha1 = "575644e3c05b258250bb599e57cf73bbf1062901"
uuid = "b8f27783-ece8-5eb3-8dc8-9495eed66fee"
version = "0.9.22"

[[deps.MatrixNetworks]]
deps = ["Arpack", "DataStructures", "DelimitedFiles", "IterTools", "KahanSummation", "LinearAlgebra", "Printf", "Random", "SparseArrays", "Statistics"]
git-tree-sha1 = "f6794d987d426bab570aabb2d03e2f40ca4fc438"
uuid = "4f449596-a032-5618-b826-5a251cb6dc11"
version = "1.0.2"

[[deps.MbedTLS]]
deps = ["Dates", "MbedTLS_jll", "Random", "Sockets"]
git-tree-sha1 = "1c38e51c3d08ef2278062ebceade0e46cefc96fe"
uuid = "739be429-bea8-5141-9913-cc70e7f3736d"
version = "1.0.3"

[[deps.MbedTLS_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "c8ffd9c3-330d-5841-b78e-0817d7145fa1"

[[deps.Missings]]
deps = ["DataAPI"]
git-tree-sha1 = "2ca267b08821e86c5ef4376cffed98a46c2cb205"
uuid = "e1d29d7a-bbdc-5cf2-9ac0-f12de2c33e28"
version = "1.0.1"

[[deps.Mmap]]
uuid = "a63ad114-7e13-5084-954f-fe012c677804"

[[deps.MozillaCACerts_jll]]
uuid = "14a3606d-f60d-562e-9121-12d972cd8159"

[[deps.MutableArithmetics]]
deps = ["LinearAlgebra", "SparseArrays", "Test"]
git-tree-sha1 = "3927848ccebcc165952dc0d9ac9aa274a87bfe01"
uuid = "d8a4904e-b15c-11e9-3269-09a3773c0cb0"
version = "0.2.20"

[[deps.NaNMath]]
git-tree-sha1 = "bfe47e760d60b82b66b61d2d44128b62e3a369fb"
uuid = "77ba4419-2d1f-58cd-9bb1-8ffee604a2e3"
version = "0.3.5"

[[deps.NetworkOptions]]
uuid = "ca575930-c2e3-43a9-ace4-1e988b2c1908"

[[deps.OpenBLAS_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "Libdl"]
uuid = "4536629a-c528-5b80-bd46-f80d51c5b363"

[[deps.OpenSpecFun_jll]]
deps = ["Artifacts", "CompilerSupportLibraries_jll", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "13652491f6856acfd2db29360e1bbcd4565d04f1"
uuid = "efe28fd5-8261-553b-a9e1-b2916fc3738e"
version = "0.5.5+0"

[[deps.OrderedCollections]]
git-tree-sha1 = "85f8e6578bf1f9ee0d11e7bb1b1456435479d47c"
uuid = "bac558e1-5e72-5ebc-8fee-abe8a469f55d"
version = "1.4.1"

[[deps.Parsers]]
deps = ["Dates"]
git-tree-sha1 = "438d35d2d95ae2c5e8780b330592b6de8494e779"
uuid = "69de0a69-1ddd-5017-9359-2bf0b02dc9f0"
version = "2.0.3"

[[deps.Pkg]]
deps = ["Artifacts", "Dates", "Downloads", "LibGit2", "Libdl", "Logging", "Markdown", "Printf", "REPL", "Random", "SHA", "Serialization", "TOML", "Tar", "UUIDs", "p7zip_jll"]
uuid = "44cfe95a-1eb2-52ea-b672-e2afdf69b78f"

[[deps.Preferences]]
deps = ["TOML"]
git-tree-sha1 = "00cfd92944ca9c760982747e9a1d0d5d86ab1e5a"
uuid = "21216c6a-2e73-6563-6e65-726566657250"
version = "1.2.2"

[[deps.Printf]]
deps = ["Unicode"]
uuid = "de0858da-6303-5e67-8744-51eddeeeb8d7"

[[deps.REPL]]
deps = ["InteractiveUtils", "Markdown", "Sockets", "Unicode"]
uuid = "3fa0cd96-eef1-5676-8a61-b3b8758bbffb"

[[deps.Random]]
deps = ["Serialization"]
uuid = "9a3f8284-a2c9-5f02-9a11-845980a1fd5c"

[[deps.Reexport]]
git-tree-sha1 = "45e428421666073eab6f2da5c9d310d99bb12f9b"
uuid = "189a3867-3050-52da-a836-e630ba90ab69"
version = "1.2.2"

[[deps.Rmath]]
deps = ["Random", "Rmath_jll"]
git-tree-sha1 = "bf3188feca147ce108c76ad82c2792c57abe7b1f"
uuid = "79098fc4-a85e-5d69-aa6a-4863f24498fa"
version = "0.7.0"

[[deps.Rmath_jll]]
deps = ["Artifacts", "JLLWrappers", "Libdl", "Pkg"]
git-tree-sha1 = "68db32dff12bb6127bac73c209881191bf0efbb7"
uuid = "f50d1b31-88e8-58de-be2c-1cc44531875f"
version = "0.3.0+0"

[[deps.SHA]]
uuid = "ea8e919c-243c-51af-8825-aaa63cd721ce"

[[deps.Serialization]]
uuid = "9e88b42a-f829-5b0c-bbe9-9e923198166b"

[[deps.SharedArrays]]
deps = ["Distributed", "Mmap", "Random", "Serialization"]
uuid = "1a1011a3-84de-559e-8e89-a11a2f7dc383"

[[deps.SimpleTraits]]
deps = ["InteractiveUtils", "MacroTools"]
git-tree-sha1 = "5d7e3f4e11935503d3ecaf7186eac40602e7d231"
uuid = "699a6c99-e7fa-54fc-8d76-47d257e15c1d"
version = "0.9.4"

[[deps.Sockets]]
uuid = "6462fe0b-24de-5631-8697-dd941f90decc"

[[deps.SortingAlgorithms]]
deps = ["DataStructures"]
git-tree-sha1 = "b3363d7460f7d098ca0912c69b082f75625d7508"
uuid = "a2af1166-a08f-5f64-846c-94a0d3cef48c"
version = "1.0.1"

[[deps.SparseArrays]]
deps = ["LinearAlgebra", "Random"]
uuid = "2f01184e-e22b-5df5-ae63-d93ebab69eaf"

[[deps.SpecialFunctions]]
deps = ["ChainRulesCore", "LogExpFunctions", "OpenSpecFun_jll"]
git-tree-sha1 = "a322a9493e49c5f3a10b50df3aedaf1cdb3244b7"
uuid = "276daf66-3868-5448-9aa4-cd146d93841b"
version = "1.6.1"

[[deps.StaticArrays]]
deps = ["LinearAlgebra", "Random", "Statistics"]
git-tree-sha1 = "3240808c6d463ac46f1c1cd7638375cd22abbccb"
uuid = "90137ffa-7385-5640-81b9-e52037218182"
version = "1.2.12"

[[deps.Statistics]]
deps = ["LinearAlgebra", "SparseArrays"]
uuid = "10745b16-79ce-11e8-11f9-7d13ad32a3b2"

[[deps.StatsAPI]]
git-tree-sha1 = "1958272568dc176a1d881acb797beb909c785510"
uuid = "82ae8749-77ed-4fe6-ae5f-f523153014b0"
version = "1.0.0"

[[deps.StatsBase]]
deps = ["DataAPI", "DataStructures", "LinearAlgebra", "Missings", "Printf", "Random", "SortingAlgorithms", "SparseArrays", "Statistics", "StatsAPI"]
git-tree-sha1 = "8cbbc098554648c84f79a463c9ff0fd277144b6c"
uuid = "2913bbd2-ae8a-5f71-8c99-4fb6c76f3a91"
version = "0.33.10"

[[deps.StatsFuns]]
deps = ["ChainRulesCore", "IrrationalConstants", "LogExpFunctions", "Reexport", "Rmath", "SpecialFunctions"]
git-tree-sha1 = "46d7ccc7104860c38b11966dd1f72ff042f382e4"
uuid = "4c63d2b9-4356-54db-8cca-17b64c39e42c"
version = "0.9.10"

[[deps.TOML]]
deps = ["Dates"]
uuid = "fa267f1f-6049-4f14-aa54-33bafae1ed76"

[[deps.Tar]]
deps = ["ArgTools", "SHA"]
uuid = "a4e569a6-e804-4fa4-b0f3-eef7a1d5b13e"

[[deps.Test]]
deps = ["InteractiveUtils", "Logging", "Random", "Serialization"]
uuid = "8dfed614-e22c-5e08-85e1-65c5234f0b40"

[[deps.TranscodingStreams]]
deps = ["Random", "Test"]
git-tree-sha1 = "216b95ea110b5972db65aa90f88d8d89dcb8851c"
uuid = "3bb67fe8-82b1-5028-8e26-92a6c54297fa"
version = "0.9.6"

[[deps.URIs]]
git-tree-sha1 = "97bbe755a53fe859669cd907f2d96aee8d2c1355"
uuid = "5c2747f8-b7ea-4ff2-ba2e-563bfd36b1d4"
version = "1.3.0"

[[deps.UUIDs]]
deps = ["Random", "SHA"]
uuid = "cf7118a7-6976-5b1a-9a39-7adc72f591a4"

[[deps.Unicode]]
uuid = "4ec0a83e-493e-50e2-b9ac-8f72acf5a8f5"

[[deps.Zlib_jll]]
deps = ["Libdl"]
uuid = "83775a58-1f1d-513f-b197-d71354ab007a"

[[deps.libblastrampoline_jll]]
deps = ["Artifacts", "Libdl", "OpenBLAS_jll"]
uuid = "8e850b90-86db-534c-a0d3-1478176c7d93"

[[deps.nghttp2_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "8e850ede-7688-5339-a07c-302acd2aaf8d"

[[deps.p7zip_jll]]
deps = ["Artifacts", "Libdl"]
uuid = "3f19e933-33d8-53b3-aaab-bd5110c3b7a0"
"""

# ╔═╡ Cell order:
# ╠═568f057a-126d-11ec-23cb-f98bea4a534f
# ╠═daad198c-10c8-4e4c-93c4-d330ab22f3dd
# ╠═2cca4797-d1ee-4c27-8243-736e3e468dd1
# ╠═6b82e993-2f3d-4d5c-8709-57050c7211de
# ╠═382a2b3a-4059-4cbe-8485-b0ecce99c451
# ╠═e59e2718-acc6-4a98-8ec9-61cf0a375f90
# ╠═f7acd079-f79b-4967-a9ee-fc4965e2a06c
# ╠═c118a05d-d1bb-4767-9f3a-0b5cefd69d47
# ╠═9d2617c5-ebf2-46c8-910f-190ba1d160ac
# ╠═078cb436-e238-4a69-bde6-156624db601b
# ╠═cea0b9f0-b908-4c33-8a5d-6a3019cfa47a
# ╠═07d10397-f053-45e0-ab2b-6565c18db5a2
# ╠═464e87db-a12f-4e8b-a03a-ae1f943a42d0
# ╠═e323b98a-47a7-4182-9892-4d0b1891e295
# ╠═82baf161-7a98-4bb5-a928-b2273e4360cb
# ╠═89196053-24db-4013-a1e3-3d3b22c4eedc
# ╠═c7667675-8018-40f5-a1d9-8756f29466e0
# ╠═ed4ded6b-925a-46e7-bcab-0cf0dc0fe80a
# ╠═fa4d516c-74ea-44cb-bc18-e2b6cde80515
# ╠═120de079-e8e5-40b3-9582-c3741cf024cb
# ╠═6ea414f8-d5bb-4432-9afb-6d2b2cfd1d01
# ╠═6d793a48-b48e-4547-ac87-c23a1b03de9c
# ╠═e0470dad-e1ab-4603-85d0-e165f80c2463
# ╠═c6a079d7-2773-41ba-81c8-773efaabd010
# ╠═61d320a0-2f4f-4cf4-b800-20bb77560c17
# ╠═27547863-22e1-466e-951e-2a5677bb9501
# ╠═2eb91ffc-799d-496e-8b50-6be2d497beaa
# ╠═5e201d20-3600-4b21-a764-8dd1e89cdf66
# ╠═6678078e-f30c-4e5e-8de5-f697d6c241fd
# ╠═c2c72029-ffd2-463c-8548-bbe306178bd1
# ╠═77f86b91-0ac4-4ba4-a687-0ea49a0ddd10
# ╠═314415de-ac90-479a-8665-fa9e51323740
# ╠═cea3d8d2-70e4-49c7-9698-d4085976e924
# ╠═fba39823-d264-4210-80c8-491eb19486d2
# ╠═d6a95c3b-30c1-4004-884c-2acdf4a2ef7f
# ╠═080bd517-473a-4c13-9969-a4775a2acc16
# ╠═4746f780-750d-4151-bdfb-9687456a36f5
# ╠═f2279703-313c-4146-8e01-52c5fecf8cfd
# ╠═69853164-2ca0-4cba-9aef-307f0766b273
# ╠═bade5453-0522-4cbc-8200-78ec160f1192
# ╠═3c93ec46-633e-4d97-aa53-6d16b7e85502
# ╠═1c57967f-f38f-41e2-bc7c-51d1dd681e0b
# ╠═b5da5b91-de7c-4b69-98f5-737a8a9ced34
# ╠═e0d8e8d1-8e92-4ea3-9b38-bfb7378fe004
# ╠═f6b8b94d-0176-4b19-9c81-2959cfff60e7
# ╠═cc6dbc26-db1f-4534-95b9-7a801139e1d0
# ╠═c5d9bd7f-1a75-482f-a2aa-f653fdce083c
# ╟─00000000-0000-0000-0000-000000000001
# ╟─00000000-0000-0000-0000-000000000002
